--- thinklua.md	2021-05-27 13:14:31.953385229 +0200
+++ ../python2/thinkpython2.md	2021-05-26 20:13:13.450794938 +0200
@@ -1,8 +1,14 @@
 ```
-// $Id: thinklua.md,v 1.1 2021/05/27 11:13:57 heiko Exp $
+// $Id: thinkpython2.md,v 1.3 2021/05/26 18:12:08 heiko Exp $
 //
-// $Log: thinklua.md,v $
-// Revision 1.1  2021/05/27 11:13:57  heiko
+// $Log: thinkpython2.md,v $
+// Revision 1.3  2021/05/26 18:12:08  heiko
+// R1D4: Finished Section 1.2 (What is a program?).
+//
+// Revision 1.2  2021/05/23 19:11:26  heiko
+// R1D1: Finished Section 1.1 (The Python programming language).
+//
+// Revision 1.1  2021/05/23 16:07:38  heiko
 // Initial revision
 //
 ```
@@ -11,9 +17,8 @@
 
 [\#100DaysOfLinux](https://twitter.com/hashtag/100DaysOfLinux) :: ROUND 1 DAY 1--100
 
-**Markdown Version of "Think Lua"**
+**Markdown Version of "Think Python First Edition"**
 
-Adapted from Allen B. Downey's "Think Python First Edition".
 Think Python First Edition is available at https://greenteapress.com/wp/think-python/.
 Styled HTML generated by [Dillinger](https://dillinger.io).
 
@@ -22,13 +27,12 @@
 
 
 
-# Think Lua: How to Think Like a Computer Scientist
+# Think Python: How to Think Like a Computer Scientist
 
-**Heiko Blomenkamp**
-First Edition (which uses Lua 5.4.3), Version 2.0.21
+**Allen B. Downey**
+First Edition (which uses Python 2), Version 2.0.17
 
-Think Python First Edition: Copyright (C) 2017 Allen B. Downey.
-Modifications (Think Lua): Copyright (C) 2021 Heiko Blomenkamp.
+Copyright (C) 2017 Allen B. Downey.
 
 Permission is granted to copy, distribute, and/or modify this work under the terms of
 the Creative Commons Attribution-NonCommercial 3.0 Unported License, which is
@@ -38,7 +42,7 @@
 
 - [Preface](#Preface)
 - [The way of the program](#1_The_way_of_the_program)
-    - [The Lua programming language](#11_The_Lua_programming_language)
+    - [The Python programming language](#11_The_Python_programming_language)
     - [What is a program?](#12_What_is_a_program)
 
 
@@ -71,10 +75,10 @@
 
 
 
-### 1\.1 The Lua programming language
+### 1\.1 The Python programming language
 
-The programming language you will learn is Lua. Lua is an example of a **high-level
-language**; other high-level languages you might have heard of are C, C++, Python,
+The programming language you will learn is Python. Python is an example of a **high-
+level language**; other high-level languages you might have heard of are C, C++, Perl,
 and Java.
 
 There are also **low-level languages**, sometimes referred to as "machine languages"
@@ -117,28 +121,28 @@
 
 &#x00A0; ![Compiling, and Running](https://greenteapress.com/thinkpython/html/thinkpython002.png "Compiling, and Running")
 
-Lua is considered an interpreted language because Lua programs are executed by an
-interpreter. There are two ways to use the interpreter: **interactive mode** and **script
-mode**. In interactive mode, you type Lua programs and the interpreter displays the
-result:
+Python is considered an interpreted language because Python programs are
+executed by an interpreter. There are two ways to use the interpreter: **interactive
+mode** and **script mode**. In interactive mode, you type Python programs and the
+interpreter displays the result:
 
 ```
-> 1 + 1
+>>> 1 + 1
 2
 ```
 
-The chevron, `>` , is the prompt the interpreter uses to indicate that it is ready. If you
+The chevron, `>>>` , is the prompt the interpreter uses to indicate that it is ready. If you
 type `1 + 1` , the interpreter replies `2` .
 
 Alternatively, you can store code in a file and use the interpreter to execute the
-contents of the file, which is called a **script**. By convention, Lua scripts have names
-that end with `.lua` .
+contents of the file, which is called a **script**. By convention, Python scripts have
+names that end with `.py` .
 
 To execute the script, you have to tell the interpreter the name of the file. If you have
-a script named `dinsdale.lua` and you are working in a UNIX command window, you
-type `lua dinsdale.lua` . In other development environments, the details of executing
-scripts are different. You can find instructions for your environment at the Lua
-website `http://lua.org` .
+a script named `dinsdale.py` and you are working in a UNIX command window, you
+type `python dinsdale.py` . In other development environments, the details of executing
+scripts are different. You can find instructions for your environment at the Python
+website `http://python.org` .
 
 Working in interactive mode is convenient for testing small pieces of code because
 you can type and execute them immediately. But for anything more than a few lines,
